# Define a 'Service' To Expose mysql to Other Services
apiVersion: v1
kind: Service
metadata:
  name: k8s-mysql  # DNS name 
  labels:
    app: mysql
    tier: database
spec:
  ports:
    - port: 3306
      targetPort: 3306
  selector:       # mysql Pod Should contain same labels
    app: mysql
    tier: database
  clusterIP: None  # We Use DNS, Thus ClusterIP is not relevant
---
# Configure 'Deployment' of mysql server
apiVersion: apps/v1
kind: Deployment
metadata:
  name: k8s-mysql
  labels:
    app: mysql
    tier: database
spec:
  selector: # mysql Pod Should contain same labels 
    matchLabels:
      app: mysql
      tier: database
  strategy:
    type: Recreate
  template:
    metadata:
      labels: # Must match 'Service' and 'Deployment' selectors
        app: mysql
        tier: database
    spec:
      containers:
      - image: mysql:5.7 # image from docker-hub
        name: mysql 
        env:
        - name: MYSQL_ROOT_PASSWORD # Setting Root Password of mysql From a 'Secret'
          valueFrom:
            secretKeyRef:
              name: mysql-root-credentials # Name of the 'Secret'
              key: password   # 'key' inside the Secret which contains required 'value'
        - name: MYSQL_DATABASE # Setting Database Name from a 'ConfigMap'
          valueFrom:
            configMapKeyRef:
              name: db-conf
              key: name
        - name: MYSQL_USER # Setting USER username on mysql From a 'Secret'
          valueFrom:
            secretKeyRef:
              name: mysql-user-credentials
              key: username
        - name: MYSQL_PASSWORD # Setting USER Password on mysql From a 'Secret'
          valueFrom:
            secretKeyRef:
              name: mysql-user-credentials
              key: password
     
        ports:
        - containerPort: 3306
          name: mysql
