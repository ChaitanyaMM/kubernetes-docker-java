kind: Service
apiVersion: v1
metadata:
  name: kubernetes-docker-java
  labels:
    name: kubernetes-docker-java
spec:
  ports:
    - nodePort: 30163 
      port: 7878      
      targetPort: 7878  
      protocol: TCP
  selector:           
    app: kubernetes-docker-java
  type: NodePort       

---
apiVersion: apps/v1 
kind: Deployment    
metadata:              
  name: kubernetes-docker-java
spec:                
  selector:         
    matchLabels:
      app: kubernetes-docker-java
  replicas: 2      
  template:
    metadata:
      labels:        
        app: kubernetes-docker-java
    spec:
      containers:
        - name: kubernetes-docker-java #main-container
          image: chaitu465/kubernerte-docker-java:3.4
          ports:
            - containerPort: 7878                
          env:                  # Environment variables supplied to the Pod
          - name: spring.datasource.url
            valueFrom:
              configMapKeyRef:
                name: db-conf
                key: url
          - name: spring.datasource.password
            value: admin123
          - name: spring.datasource.username
            value: root
          volumeMounts:
            - name: shared-logs
              mountPath: /logs
        - name: adapter-container #adapter-container
          image: chaitu465/adopter-ambassador-container:v9.1
          imagePullPolicy: Always
          resources: {}
          ports:
           - containerPort: 7777
          volumeMounts:
            - name: shared-logs
              mountPath: /logs
      initContainers:
        - name: init-service
          image: busybox:1.31
          command: ['sh', '-c', 'echo -e "Checking for the availability of MySQL Server deployment"; while ! nc -z mysql 3306; do sleep 1; printf "-"; done; echo -e "  >> MySQL DB Server has started";']
      volumes:
        - name: shared-logs
          emptyDir: {}